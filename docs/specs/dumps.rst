.. doctest docs/specs/dumps.rst
.. _book.specs.dumps:

=========================================
Python dumps
=========================================

.. If this fails just because something has changed in the expected
   dump, then you need to run::

   $ python manage_a.py dump2py a --overwrite
   $ python manage_b.py dump2py b --overwrite


A series of usage examples for :ref:`Python dumps <dpy>`.

This document uses the :mod:`lino_book.projects.dumps` demo project.

Models and settings
===================

The :xfile:`models.py` file:

.. literalinclude:: ../../lino_book/projects/dumps/models.py

The :file:`settings/a.py` file:

.. literalinclude:: ../../lino_book/projects/dumps/settings/a.py

We wrote a Python fixture which adds three records.  It is in file
:xfile:`fixtures/demo.py`:

.. literalinclude:: ../../lino_book/projects/dumps/fixtures/demo.py

First suite
===========

..  doctest init:
   
    >>> from atelier.sheller import Sheller
    >>> shell = Sheller("lino_book/projects/dumps")

We initialize our database from our demo fixture:

>>> shell("python manage_a.py prep --noinput")
... #doctest: +ELLIPSIS
`initdb demo` started on database .../default.db.
Operations to perform:
  Synchronize unmigrated apps: about, bootstrap3, dumps, extjs, jinja, lino, staticfiles
  Apply all migrations: (none)
Synchronizing apps without migrations:
  Creating tables...
    Creating table dumps_foo
    Running deferred SQL...
Running migrations:
  No migrations to apply.
Loading data from ...
Installed 3 object(s) from 1 fixture(s)


>>> shell("python manage_a.py show dumps.Foos")
... #doctest: +ELLIPSIS
==== ============= ================== ================== =====================
 ID   Designation   Designation (de)   Designation (fr)   Last visit
---- ------------- ------------------ ------------------ ---------------------
 1    First         Erster             Premier            2016-07-02 23:55:12
 2    January       Januar             janvier            2016-07-03 00:10:23
 3    Three         Drei               Trois              2016-10-30 04:34:00
==== ============= ================== ================== =====================


We run :manage:`dum2py` to create a dump:

>>> shell("python manage_a.py dump2py tmp/a --overwrite")
... #doctest: +ELLIPSIS
Writing .../lino_book/projects/dumps/tmp/a/restore.py...
Wrote 3 objects to .../lino_book/projects/dumps/tmp/a/restore.py and siblings.

The dump generated by :manage:`dump2py` consists of two files. First
:xfile:`restore.py`:

.. literalinclude:: ../../lino_book/projects/dumps/a/restore.py

and the second is :file:`dumps_foo.py` (app label and model name)
                    
.. literalinclude:: ../../lino_book/projects/dumps/a/dumps_foo.py


Verify that the newly created dump is as expected:

>>> shell("diff a tmp/a")
... #doctest: +ELLIPSIS
<BLANKLINE>

Load the dump, dump again and verify that both dumps are the same:

>>> shell("python manage_a.py run a/restore.py --noinput")
... #doctest: +ELLIPSIS
Unversioned Site instance : no database migration
`initdb ` started on database .../default.db.
Operations to perform:
  Synchronize unmigrated apps: about, bootstrap3, dumps, extjs, jinja, lino, staticfiles
  Apply all migrations: (none)
Synchronizing apps without migrations:
  Creating tables...
    Creating table dumps_foo
    Running deferred SQL...
Running migrations:
  No migrations to apply.
Loading 3 objects to table dumps_foo...


>>> shell("python manage_a.py dump2py tmp/a --overwrite")
... #doctest: +ELLIPSIS
Writing .../lino_book/projects/dumps/tmp/a/restore.py...
Wrote 3 objects to .../lino_book/projects/dumps/tmp/a/restore.py and siblings.

>>> shell("diff a tmp/a")
... #doctest: +ELLIPSIS
<BLANKLINE>



Second suite
============

Now the same with `b`, i.e. with :setting:`USE_TZ` enabled.

The :file:`settings/b.py` file:

.. literalinclude:: ../../lino_book/projects/dumps/settings/b.py

                    
We load our demo data:

>>> shell("python manage_b.py prep --noinput")
... #doctest: +ELLIPSIS
`initdb demo` started on database .../default.db.
Operations to perform:
  Synchronize unmigrated apps: about, bootstrap3, dumps, extjs, jinja, lino, staticfiles
  Apply all migrations: (none)
Synchronizing apps without migrations:
  Creating tables...
    Creating table dumps_foo
    Running deferred SQL...
Running migrations:
  No migrations to apply.
Loading data from ...
Installed 3 object(s) from 1 fixture(s)

Note that the time stamps are now shifted 3 hours back.

>>> shell("python manage_a.py show dumps.Foos")
... #doctest: +ELLIPSIS
==== ============= ================== ================== =====================
 ID   Designation   Designation (de)   Designation (fr)   Last visit
---- ------------- ------------------ ------------------ ---------------------
 1    First         Erster             Premier            2016-07-02 20:55:12
 2    January       Januar             janvier            2016-07-02 21:10:23
 3    Three         Drei               Trois              2016-10-30 02:34:00
==== ============= ================== ================== =====================


>>> shell("python manage_b.py dump2py tmp/b --overwrite")
... #doctest: +ELLIPSIS
Writing .../lino_book/projects/dumps/tmp/b/restore.py...
Wrote 3 objects to .../lino_book/projects/dumps/tmp/b/restore.py and siblings.

Verify that the newly created dump is as expected:

>>> shell("diff b tmp/b")
... #doctest: +ELLIPSIS
<BLANKLINE>

Load the dump, dump again and verify that both dumps are the same:

>>> shell("python manage_b.py run b/restore.py --noinput")
... #doctest: +ELLIPSIS
Unversioned Site instance : no database migration
`initdb ` started on database .../default.db.
Operations to perform:
  Synchronize unmigrated apps: about, bootstrap3, dumps, extjs, jinja, lino, staticfiles
  Apply all migrations: (none)
Synchronizing apps without migrations:
  Creating tables...
    Creating table dumps_foo
    Running deferred SQL...
Running migrations:
  No migrations to apply.
Loading 3 objects to table dumps_foo...


>>> shell("python manage_b.py dump2py tmp/b --overwrite")
... #doctest: +ELLIPSIS
Writing .../lino_book/projects/dumps/tmp/b/restore.py...
Wrote 3 objects to .../lino_book/projects/dumps/tmp/b/restore.py and siblings.

>>> shell("diff b tmp/b")
... #doctest: +ELLIPSIS
<BLANKLINE>


Error messages
==============

Here we try to call :manage:`dumpy` in some invalid ways, just to
demonstrate the possible error messages.

>>> shell("python manage_a.py dump2py")
... #doctest: +ELLIPSIS +NORMALIZE_WHITESPACE +REPORT_UDIFF
usage: manage_a.py dump2py [-h] [--version] [-v {0,1,2,3}] [--settings SETTINGS] [--pythonpath PYTHONPATH] [--traceback] [--no-color] [--noinput]
                           [--tolerate] [-o]
                           output_dir
manage_a.py dump2py: error: too few arguments


>>> shell("python manage_a.py dump2py a")
... #doctest: +ELLIPSIS
CommandError: Specified output_dir ...lino_book/projects/dumps/a already exists. Delete it yourself if you dare!


Bibliography
============

Thanks to Ilian Iliev `Django, pytz, NonExistentTimeError and
AmbiguousTimeError
<http://www.ilian.io/django-pytz-nonexistenttimeerror-and-ambiguoustimeerror/>`__
